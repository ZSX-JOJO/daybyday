<?php 
    /**
     * 正则:语言是一时的，正则是一世的！
     * 
     * 以下不可以作为定界符:
     *      a-z A-Z 0-9 包括空格 \    推荐使用//
     *      \d      0-9之间的数字
     *      \D      非0-9之外的任何字符?
     *      \w      a-z A-Z 0-9 _
     *      \W      非a-z A-Z 0-9 _
     *      \s      空格 回车 换行符 tab键
     *      \S      非空格 回车 换行符 tab键
     *      ^       匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 \^。
     *      $       匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 '\n' 或 '\r'。要匹配 $ 字符本身，请使用 \$
     *      *       匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \*
     *      +       匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \+
     *      .       除了回车以外的字符都可以匹配到 
     *      ?       匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \?
     *      \       转义字符 
     *      {}      标记限定符表达式的开始。要匹配 {，请使用 \{。      
     *      //i     i 不区分大小写
     *      //m     m 视为多行 例如 $pattern = '/^zhao/m'; $str = 'zhao
     *                                      shouxin'; 视为多行
     *      //s     s 视为单行  例子 $str = 'zhao
     *                           shouxin'; 视为单行
     *      //U     只匹配最近的一个字符串;不重复匹配
     */ 
    // $str = 'zhaoshouxin';
    $str = "zzz\nzhao";//""输出转义字符 单引号不输出转义字符 别忘了！
    // $pattern = '/^zh/';//此时输出zh
    $pattern = '/^zh/m';//此时输出zh
    var_dump(preg_match($pattern,$str,$match));//preg_match()执行一个正则表达式匹配
    var_dump($match);
?>